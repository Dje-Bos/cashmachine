spring.datasource.url=jdbc:mysql://localhost/cash_machine?useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.initialization-mode=always
spring.datasource.password=springBoot123
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.username=cash_machine
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.platform=mysql
spring.jpa.open-in-view=false
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
server.port=8888
server.servlet.context-path=/cashmachine


############ SECURITY ############

spring.security.oauth2.client.registration.google.clientId=751364874997-voae7h6pou27n8qs6nrtis4gssi4thmc.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=uHs1FdEYCZJl9_PqVOlxfFyA
spring.security.oauth2.client.registration.google.redirectUriTemplate={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec: 864000000
app.oauth2.authorizedRedirectUris=https://www.google.com
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.


